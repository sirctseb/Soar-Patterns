# init.soar is a pattern to easily implement simple or complex initialization procedures
# a required init subgoal is proposed when the top state has no name
# arbitrary initialization rules and operators can be defined within the init subgoal
# an ending operator is proposed in a state no-change substate of init,
# so that it only fires after there are no more initialization operators
# the ending operator application adds a name to the top-state, which will retract the init subgoal

# how to use:
# include this file
# implement initialization operators which test (state <s> ^name init)
# elaborate <o> in (state <s> ^operator <o> +)(<o> ^name end-init)) with
# the name you want the top-state to have after initialization is complete
# e.g.
# # declare state name
# sp {
#	(state <s> ^operator <o> +)
#	(<o> ^name end-init)
# -->
#	(<o> ^state-name resulting-top-state-name)
# }

# propose the init subgoal
sp {propose*init
	# propose when top state has no name
	(state <s> ^superstate nil -^name)
-->
	# require init operator
	(<s> ^operator <o> + !)
	(<o> ^name init)
}

# propose to end the initialization procedure
sp {propose*end-init
	# propose only when we reach a state no-change impasse in init,
	# meaning no other operators were proposed
	(state <s> ^superstate (<ss> ^name init) ^attribute state ^choices none)
-->
	# propose the end-init operator on the init subgoal
	(<ss> ^operator <o> +)
	(<o> ^name end-init)
}

# apply end-init operator
sp {apply*end-init
	(state <s> ^name init ^operator <o> ^top-state <ts>)
	(<o> ^state-name <state-name>)
-->
	(<ts> ^name <state-name>)
}